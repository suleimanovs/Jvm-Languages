package variables;

import collections.model.Car;

/**
 * Created by Osman on 10:14 AM
 */
public class PrimitiveVariables {

    public static void main(String[] args) {

        /**
         * Память в Java устроено так :
         * @Stack - 1 мб. Все примитивные переменные вроде int a = 5; будут храниться в Stack.
         * Так же если мы создадим ссылочную переменную и не присвоим ей значение или присвоим значение
         * например - Car car; то оно так же будет храниться в Stack как - Car car = null;
         * Все примитивные типы и ссылки на адреса храняться в Stack.
         * Если мы создадим обьект через ключевое слово new, этот обьект будет храниться в @Stack,а в
         * значение переменной храняться будут какие - то непонятные символы вроде Car car = 0x373992;
         * При сравнения(==) переменных сравниваются значения в Stack, в случае примитивных сравниваются
         * сами значения, а при сравнений ссылочных переменных,сравниваются ссылки(адреса),находящийся
         * в Stack(так как он только хранить ссылки, а сами обьекты храняться в Heap(куча)
         *
         *
         * @Heap(куча) - ограничено оперативной памяти утройства. Как описано выше эти
         * "непонятные сивмволы" адрес обьекта в Heap(куча),то есть в Stack не храниться не сам обьект,
         * а только сслыка на него. От сюда и название "Ссылочные типы".
         * В Heap(куча) может храниться один обьект, например Car("Bmw",34), а ссылок на этот
         * обьект в Stack может быть столько сколько угодно. Обьект в куче удаляется сборщиком мусора
         * лишь тогда когда у этого обьекта нет ссылок в Stack.
         */

        Car car1 = new Car("BMW",1);
        Car car2 = new Car("BMW",1);
        System.out.println(car1.equals(car2));


         /**
         * Примичание! примитивные типы(простые типы) для сравнения сдержимых использует
         * оператор == для сравнения значения.
         * @Примитивные типы хранять биты представляющие значения(5,true,'A')
         */

        /** Примитивные целые числа */
        byte bytes = 127;
        int integer1 = 2147483647;
        int integer2 = 2147483647;
        short shorts = 32767;
        long longs = 2147483647;
        /** Примитивные Дробные числа */
        double doubles = 1.3;
        float floats = 12.0f;
        /** Примитивные символьные типы */
        char chars = 'C';
        /** Примитивные логические типы */
        boolean bool = true;
        System.out.println(integer1==integer2);






        /**
         * Примичание! ссылочные типы(простые типы) для сравнения содержимых использует оператор
         * equals подробнее в см HashcodeEquals.java.
         * Но для этого необходимо его переопределить что бы она сравнивала не ссылки а значения полей
         * @Ссылочные типы хранять биты описывающие способ получить обьект в куче(5,true,'A').Другими словами
         * они хранять в себе только адреса, а сами обьекты храняться в Heap
         * Классы, интерфейсы, списки тоже являются ссылочными типами
         */

        Integer $integer = 12;
        Byte $bytes = 127;
        String string = "123";
        Character character = 'A';
        Double _double = 12.403;
        Float floater = 132432.35F;
        Long longer = 3245555555555554490L;
        Short shorter = 2445;
        java.lang.Boolean booleans = true;

        /**
         * Преоброзование из ссылочных типов в примитивные происходит автоматически,
         * но иногда приходится это явно указать
         */
        int num = $integer.intValue()+$integer.intValue();


    }
}
